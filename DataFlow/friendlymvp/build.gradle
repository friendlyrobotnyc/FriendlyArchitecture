apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation androidDependencies.constraintLayout
    implementation androidDependencies.recyclerView

    implementation libraryDependencies.retrofitRxAdapter

    implementation libraryDependencies.retrofit
    implementation libraryDependencies.okhttp
    implementation libraryDependencies.nytimesstore
    implementation libraryDependencies.nytimesstorecache
    implementation libraryDependencies.nytimesstorekotlin
    implementation libraryDependencies.nytimesmiddle
    implementation libraryDependencies.nytimesmiddlemoshi
    implementation libraryDependencies.nytimesfilesystem

    implementation libraryDependencies.timber
    implementation libraryDependencies.glide
    implementation androidDependencies.materialComponents

    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"

    implementation libraryDependencies.rxAndroid
    implementation libraryDependencies.rxJava

    implementation libraryDependencies.moshi
    kapt(libraryDependencies.moshiCodegen)
}

